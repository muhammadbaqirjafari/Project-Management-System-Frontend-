[{"D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\index.js":"1","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\App.js":"2","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Signin\\Signin.jsx":"3","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Home\\HomeCard\\HomeCard.jsx":"4","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\AccountDetails\\AccountDetails.jsx":"5","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Home\\HomeHeader\\HomeHeader.jsx":"6","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Home\\Home.jsx":"7","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\ResetPassword\\ResetPassword.jsx":"8","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Header\\Header.jsx":"9","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Signup\\Signup.jsx":"10"},{"size":288,"mtime":1610087536439,"results":"11","hashOfConfig":"12"},{"size":766,"mtime":1610088080622,"results":"13","hashOfConfig":"12"},{"size":3831,"mtime":1610086203381,"results":"14","hashOfConfig":"12"},{"size":845,"mtime":1610086203370,"results":"15","hashOfConfig":"12"},{"size":12799,"mtime":1610105078512,"results":"16","hashOfConfig":"12"},{"size":1266,"mtime":1610087887382,"results":"17","hashOfConfig":"12"},{"size":782,"mtime":1610086203367,"results":"18","hashOfConfig":"12"},{"size":2638,"mtime":1610086203379,"results":"19","hashOfConfig":"12"},{"size":526,"mtime":1610086203360,"results":"20","hashOfConfig":"12"},{"size":6101,"mtime":1610086203385,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"8yik2e",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\index.js",["45"],"export { Signin } from \"./Signin/Signin\";\r\nexport { Home } from \"./Home/Home\";\r\nexport { Signup } from \"./Signup/Signup\";\r\nexport { ResetPassword } from './ResetPassword/ResetPassword';\r\nexport { OTP } from './OTP/OTP';\r\nexport { AccountDetails }  form  './AccountDetails/AccountDetails';","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\App.js",[],"D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Signin\\Signin.jsx",[],["46","47"],"D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Home\\HomeCard\\HomeCard.jsx",[],"D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\AccountDetails\\AccountDetails.jsx",["48"],"import React ,{useState} from \"react\";\r\n\r\n// Importing CSS\r\nimport styles from \"./AccountDetails.module.css\";\r\nimport { Header } from \"../Header/Header\";\r\n\r\n\r\nimport { Card , TextField, Typography, Button,CardContent,CardActions} from \"@material-ui/core\";\r\n\r\n\r\n\r\nexport const AccountDetails = () => {\r\n\r\n\r\n//  value should be taken from database and displayed if not null \r\n      const [fullName,setFullName ] = useState(\"\");\r\n      const [email, setEmail] = useState(\"\");\r\n\r\n      const [bio,setBio ] = useState(\"\");\r\n      const [country, setCountry] = useState(\"\");\r\n      \r\n      const [city,setCity ] = useState(\"\");\r\n      const [fulladdress, setFullAddress] = useState(\"\");\r\n      \r\n\r\n\r\n\r\n\r\n\r\nconst submit = (e) => {\r\n    e.preventDefault(); // Prevent Form from submitting\r\n    // entered data should be saved in database  \r\n   // as there is no field required type so no need for check so just update the databse\r\n    console.log(fullName,email,bio,country,city,fulladdress);\r\n    };\r\n  \r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n<div>\r\n      <Header />\r\n      <div className={`${styles.root}  mx-auto`}>\r\n            <div className={styles.mainDiv}>\r\n                  {/** Here Goes the Title Typo */}\r\n                  <div class={`${styles.title} mt-3 mb-3`}>\r\n                        <section  class={styles.titleSection}>\r\n                              <div class=\"container xs-2\">\r\n                                    <div class=\"xs-12\" >\r\n                                          <h3 class=\"h3-head\"> Account Settings</h3>\r\n                                    </div>\r\n                                    <div class=\" h3-head xs-12\">\r\n                                          <h6 class=\"\"> Change account information and settings</h6>\r\n                                    </div>\r\n                              </div>\r\n                        </section>\r\n                  </div>\r\n                  <form className={styles.mainForm} action=\"/home\" method=\"POST\">\r\n                        <div className={`${styles.topDiv} container xs-12 md-12 sm-12`}>\r\n                              <div className={styles.mainCardDiv}>\r\n                                     <div className={`${styles.card1} col-xs-12 col md-3 `}>\r\n                                          {/** Drop Box TYpe Card */}\r\n                                          <Card className={`${styles.linkCard} xs-12 md-3 ` }>\r\n                                                <CardContent>\r\n                                                      <Typography className={styles.linkCardLink} color=\"textSecondary\" >\r\n                                                          <div class=\"list-group\" id='short'>\r\n                                                                  <a href=\"#\" class=\"list-group-item list-group-item-action \">General</a>\r\n                                                            </div>\r\n                                                             </Typography>\r\n\r\n                                                </CardContent>\r\n                                          </Card>\r\n\r\n                                    </div>\r\n                                    <div className={styles.card2}>\r\n                                    {/*CARD TYPE Form */}\r\n                                    <Card className={`${styles.mainCard}  xs-12 md-9  `}>\r\n                                    <CardContent>\r\n                                          <Typography className={styles.mainCardTitle}  variant='h5' component='h3' gutterBottom>\r\n                                                      Basic Information\r\n                                          </Typography>\r\n                                          <hr/>\r\n                                          <Typography variant=\"body\" component=\"div\">\r\n                                          <div className=\"d-flex  mx-auto\">\r\n                                                            <div className={styles.dd1}  >\r\n                                                                  <Typography className={styles.CardFieldlabel} variant=\"h5\" component=\"h5\">\r\n                                                                  Full Name\r\n                                                                  </Typography>\r\n                                                                  <div className={styles.nameField}>\r\n                                                                        <TextField\r\n                                                                        fullWidth\r\n                                                                        type=\"text\"\r\n                                                                        variant=\"outlined\"\r\n                                                                        placeholder=\" Your Full Name\"\r\n                                                                        className=\"mb-3 \"\r\n                                                                        onChange={(e) => setFullName(e.target.value)}\r\n                                                                        />{\" \"}\r\n                                                                  </div>\r\n                                                            \r\n                                                            </div>         \r\n                                                       <div className={styles.dd1}>\r\n                                                                  <Typography className={styles.CardFieldlabel} variant=\"h5\" component=\"h3\">\r\n                                                            E-Mail\r\n                                                            </Typography>    \r\n                                                            <div className={styles.emailField}>\r\n                                                                  <TextField\r\n                                                                  fullWidth\r\n                                                                  type=\"email\"\r\n                                                                  variant=\"outlined\"\r\n                                                                  placeholder=\" Your E-Mail\"\r\n                                                                  className=\"mb-3 \"\r\n                                                                  onChange={(e) => setEmail(e.target.value)}\r\n                                                                  />{\" \"}\r\n                                                            </div>\r\n                                                      </div>\r\n\r\n                                          </div>\r\n\r\n                                                <div className={styles.bioField}>\r\n                                                      <Typography className={styles.CardFieldlabel} variant=\"h5\" component=\"h2\">\r\n                                                            Bio\r\n                                                            </Typography>\r\n                                                <TextField\r\n                                                fullWidth\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                multiline = {true}\r\n                                                rows = {4}\r\n                                                pllaceholder=\" Your Bio\"\r\n                                                className=\"mb-3 \"\r\n                                                onChange={(e) => setBio(e.target.value)}\r\n                                                />{\" \"}\r\n                                                </div>\r\n                                          </Typography>\r\n                                          <hr/>\r\n                                          <Typography className=\"\" color=\"\">\r\n                                              <div className=\"d-flex  mx-auto\">\r\n                                                            <div className={styles.dd1}  >\r\n                                                                  <Typography className={styles.CardFieldlabel} variant=\"h5\" component=\"h5\">\r\n                                                                  Country\r\n                                                                  </Typography>\r\n                                                                  <div className={styles.countryField}>\r\n                                                                        <TextField\r\n                                                                        fullWidth\r\n                                                                        type=\"text\"\r\n                                                                        variant=\"outlined\"\r\n                                                                        placeholder=\" Your Country\"\r\n                                                                        className=\"mb-3 \"\r\n                                                                        onChange={(e) => setCountry(e.target.value)}\r\n                                                                        />{\" \"}\r\n                                                                  </div>\r\n                                                            \r\n                                                            </div>         \r\n                                                       <div className={styles.dd1}>\r\n                                                                  <Typography className={styles.CardFieldlabel} variant=\"h5\" component=\"h3\">\r\n                                                            City\r\n                                                            </Typography>    \r\n                                                            <div className={styles.cityField}>\r\n                                                                  <TextField\r\n                                                                  fullWidth\r\n                                                                  type=\"text\"\r\n                                                                  variant=\"outlined\"\r\n                                                                  placeholder=\" Your City\"\r\n                                                                  className=\"mb-3 \"\r\n                                                                  onChange={(e) => setCity(e.target.value)}\r\n                                                                  />{\" \"}\r\n                                                            </div>\r\n                                                      </div>\r\n\r\n                                          </div>\r\n\r\n                                                <div className={styles.fullAddressField}>\r\n                                                      <Typography className={styles.CardFieldlabel} variant=\"h5\" component=\"h2\">\r\n                                                            Full Address\r\n                                                            </Typography>\r\n                                                <TextField\r\n                                                fullWidth\r\n                                                type=\"text\"\r\n                                                variant=\"outlined\"\r\n                                                placeholder=\"Your Full Address\"\r\n                                                className=\"mb-2 \"\r\n                                                onChange={(e) => setFullAddress(e.target.value)}\r\n                                                />{\" \"}\r\n                                                </div>\r\n                                          </Typography>\r\n                                    \r\n                                                </CardContent>\r\n                                          <CardActions item xs={3}>\r\n                                                <Button \r\n                                                size=\"large\"\r\n                                                className={styles.AccountsBtn}\r\n                                                onClick={(e) => submit(e)}\r\n                                                variant=\"contained\"\r\n                                                >\r\n                                                       Save\r\n                                                       </Button>\r\n                                          </CardActions>\r\n\r\n\r\n                                    </Card>\r\n \r\n                                    </div>     \r\n                              </div>\r\n\r\n\r\n\r\n                        </div>\r\n                  </form>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n</div>\r\n);\r\n};","D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Home\\HomeHeader\\HomeHeader.jsx",[],"D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Home\\Home.jsx",[],"D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\ResetPassword\\ResetPassword.jsx",[],"D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Header\\Header.jsx",[],"D:\\GitHub\\mine_PMS\\Project-Management-System-Frontend-\\src\\components\\Signup\\Signup.jsx",[],{"ruleId":null,"fatal":true,"severity":2,"message":"49","line":6,"column":28},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":69,"column":67,"nodeType":"56","endLine":69,"endColumn":127},"Parsing error: Unexpected token, expected \";\"\n\n  4 | export { ResetPassword } from './ResetPassword/ResetPassword';\n  5 | export { OTP } from './OTP/OTP';\n> 6 | export { AccountDetails }  form  './AccountDetails/AccountDetails';\n    |                            ^","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]